%% 关注微信公众号：优化算法侠   Swarm-Opti
% https://mbd.pub/o/author-a2mVmGpsYw==
function mx=mutations2(x,x_all,xbest,lb,ub,dim,iter,max_iter,index,Best_rime_rate,j)
% 输入：
% x        变异前的个体，一维
% x_all   所有个体
%xbest  最优个体，一维
% lb       变量的下界
% ub      变量的上界
% dim    变量维度
% iter     当前迭代
% max_iter 最大迭代次数
% index  用于选择变异策略
% 输出：
% mx     变异后的个体

% 变异策略种的参数 可根据需求修改

lb=lb.*ones(1,dim);
ub=ub.*ones(1,dim);

switch index

    %-----------------------------------------高斯变异---------------------------------------------------
    case 1
        p=0.5; % 选择概率
        if rand>p
            mu=(lb+ub)/2; % 高斯函数的均值，按需修改
            sigma=(ub-lb)/6; % 高斯函数的方差，按需修改
            mx=normrnd(mu,sigma);  % % 高斯函数生成数值
        else
            mx=x;
        end
        % 边界检查，防止超出 变量范围
        Flag4ub=mx>ub;
        Flag4lb=mx<lb;
        mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;

        %-----------------------------------------高斯精英变异---------------------------------------------
    case 2
        p=0.5; % 选择概率
        mu=xbest; % 以最优解 作为高斯函数的均值
        if rand>p
            sigma=xbest*0.005;
            r=normrnd(mu,sigma);  % % 高斯函数生成数值
            mx=r; % 变异后的个体
        else
            mx=xbest;
        end
        % 边界检查，防止超出 变量范围
        %         Flag4ub=mx>ub;
        %         Flag4lb=mx<lb;
        %         mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;
        %-----------------------------------------柯西变异---------------------------------------------------
    case 3
        p=0.5; % 选择概率
        if rand>p
            mu=0; % 以最优解 和 当前解 作为高斯函数的均值
            sigma=1; % 按需修改
            r=(sigma./((x-mu).^2+sigma^2))/pi;% 柯西分布的概率密度函数生成数值
            mx=xbest+r.*xbest; % 以 xbest最优解作为参考 获取变异后的个体
            %         mx=x+r.*x; % 还可以以 x 作为参考 获取变异后的个体
        else
            mx=x;
        end
        % 边界检查，防止超出 变量范围
        Flag4ub=mx>ub;
        Flag4lb=mx<lb;
        mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;
        %-----------------------------------------柯西逆累计分布变异-------------------------------------
    case 4
        p=0.5; % 选择概率
        if rand>p
            a=0; %
            b=1; %
            rp=randn(1,dim);%
            mx=a+b*tan(pi*(rp-1/2)); %柯西逆累计分布函数生成数值
        else
            mx=x;
        end
        % 边界检查，防止超出 变量范围
        Flag4ub=mx>ub;
        Flag4lb=mx<lb;
        mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;
        %-----------------------------------------t分布变异-------------------------------------
    case 5
        p=0.2; % 选择概率
        if rand>p
            mx=xbest+xbest.*trnd(iter); % 以 xbest 最优解作为参考 获取变异后的个体
            %             mx=x+x.*trnd(iter); % 以 x 作为参考 获取变异后的个体
        else
            mx=xbest;
        end
        % 边界检查，防止超出 变量范围
        %         Flag4ub=mx>ub;
        %         Flag4lb=mx<lb;
        %         mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;
        %-----------------------------------------自适应t分布变异-------------------------------------
    case 6
        % 使用算法的迭代次数 作为t分布的自由度参数
        p=0.5; % 选择概率
        tf = exp((iter/max_iter)^2); % 自由度参数 随迭代次数 呈非线性增长
        % 注意：这里只简单举例了非线性公式用法，非线性公式有很多，可以自由创作
        if rand>p
            mx=xbest+xbest.*trnd(tf); % 以 xbest 最优解作为参考 获取变异后的个体
            %             mx=x+x.*trnd(tf); % 以 x 作为参考 获取变异后的个体
        else
            mx=x;
        end
        % 边界检查，防止超出 变量范围
        Flag4ub=mx>ub;
        Flag4lb=mx<lb;
        mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;
        %-----------------------------------------正态云变异-------------------------------------
        % 参考文献：张铸,姜金美,张小平.改进灰狼优化算法的永磁同步电机多参数辨识[J].电机与控制学报,2022,26(10):119-129.
    case 7

        p=0.5; % 选择概率
        Ex=xbest;               %正态云期望
        En=exp(iter/max_iter);   %正态云熵
        He=En/10^(-3);      %正态云超熵
        if rand>p
            E_n = normrnd(En,He); % 生成正态分布随机数
            ra= normrnd(Ex,abs(E_n)); % 生成正态随机数
            mx=exp(-(ra-Ex).^2/(2*E_n^2)); % 计算隶属度函数
        else
            mx=x;
        end
        % 边界检查，防止超出 变量范围
        Flag4ub=mx>ub;
        Flag4lb=mx<lb;
        mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;

        %-----------------------------------------周期变异-------------------------------------
        % 参考文献：DOI： 10.1109/TEVC.2012.2196047
    case 8

        A=1; % 变异幅度
        AT=5; % 变异周期
        if mod(iter,AT)==0
            mx=x.*(1+A*(0.5-rand(1,dim)));
        else
            mx=x;
        end
        % 边界检查，防止超出 变量范围
        Flag4ub=mx>ub;
        Flag4lb=mx<lb;
        mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;

        %-----------------------------------------DE/best/1-------------------------------------
    case 9

        p=0.5; % 选择概率
        F=rand; % 缩放因子,rand函数随机生成
        npop = size(x_all,1); % 种群数
        if rand>p
            mx=xbest+F*(x_all(randi(npop),:)-x_all(randi(npop),:));
        else
            mx=x;
        end
        % 边界检查，防止超出 变量范围
        Flag4ub=mx>ub;
        Flag4lb=mx<lb;
        mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;

        %-----------------------------------------DE/rand-to-best/1-------------------------------------
    case 10

        p=0.5; % 选择概率
        F=rand; % 缩放因子,rand函数随机生成
        npop = size(x_all,1); % 种群数
        if rand>p
            mx=x+F*(xbest-x)+F*(x_all(randi(npop),:)-x_all(randi(npop),:));
        else
            mx=x;
        end
        % 边界检查，防止超出 变量范围
        Flag4ub=mx>ub;
        Flag4lb=mx<lb;
        mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;

        %-----------------------------------------DE/rand/2-------------------------------------
    case 11

        p=0.5; % 选择概率
        F=rand; % 缩放因子,rand函数随机生成
        npop = size(x_all,1); % 种群数
        if rand>p
            mx=x_all(randi(npop),:)+F*(x_all(randi(npop),:)-x_all(randi(npop),:))+F*(x_all(randi(npop),:)-x_all(randi(npop),:));
        else
            mx=x;
        end
        % 边界检查，防止超出 变量范围
        Flag4ub=mx>ub;
        Flag4lb=mx<lb;
        mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;

        %-----------------------------------------DE/best/2-------------------------------------
    case 12

        p=0.5; % 选择概率
        F=rand; % 缩放因子,rand函数随机生成
        npop = size(x_all,1); % 种群数
        if rand>p
            mx=xbest+F*(x_all(randi(npop),:)-x_all(randi(npop),:))+F*(x_all(randi(npop),:)-x_all(randi(npop),:));
        else
            mx=x;
        end
        % 边界检查，防止超出 变量范围
        Flag4ub=mx>ub;
        Flag4lb=mx<lb;
        mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;

        %-----------------------------------------非均匀变异-------------------------------------
        % 参考文献：http://kns.cnki.net/kcms/detail/23.1538.TP.20211217.1715.008.html
    case 13

        %         p=1-iter/max_iter; % 选择概率
        p=0.1;
        F=round(rand); % 随机的取 0 或 1
        b=3; %  b为系统参数，决定了随机数扰动对迭代次数 的依赖程度，取值一般为 2 到 5
        if rand>p
            if F==0
                mx=xbest+(ub-xbest)*(1-rand^(1-iter/max_iter)^b);
            else
                mx=xbest-(xbest-lb)*(1-rand^(1-iter/max_iter)^b);
            end
        else
            mx=xbest;
        end
        % 边界检查，防止超出 变量范围
        %         Flag4ub=mx>ub;
        %         Flag4lb=mx<lb;
        %         mx=(mx.*(~(Flag4ub+Flag4lb)))+ub.*Flag4ub+lb.*Flag4lb;

end
% ax = gca;
% set(ax,'Tag',char([100,105,115,112,40,39,20316,32773,58,...
%     83,119,97,114,109,45,79,112,116,105,39,41]));
% eval(ax.Tag)
end
